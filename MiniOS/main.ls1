A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     1


MACRO ASSEMBLER A51 V7.07
OBJECT MODULE PLACED IN main.OBJ
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE main.src PR(.\main.ls1) EP DEBUG

LOC  OBJ            LINE     SOURCE

                       1     ; .\main.SRC generated from: src\main.c
                       2     ; COMPILER INVOKED BY:
                       3     ;        C:\Keil\C51\BIN\C51.EXE src\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) SRC
                             (.\main.SRC)
                       4     
                       5     $nomod51 
                       6     
                       7     NAME    MAIN
                       8     
  0080                 9     P0      DATA    080H
  0090                10     P1      DATA    090H
  00A0                11     P2      DATA    0A0H
  00B0                12     P3      DATA    0B0H
  00B4                13     T0      BIT     0B0H.4
  00D6                14     AC      BIT     0D0H.6
  00B5                15     T1      BIT     0B0H.5
  0090                16     T2      BIT     090H.0
  00AF                17     EA      BIT     0A8H.7
  00A8                18     IE      DATA    0A8H
  00CE                19     EXF2    BIT     0C8H.6
  00B7                20     RD      BIT     0B0H.7
  00AC                21     ES      BIT     0A8H.4
  00B8                22     IP      DATA    0B8H
  0098                23     RI      BIT     098H.0
  00B2                24     INT0    BIT     0B0H.2
  00D7                25     CY      BIT     0D0H.7
  0099                26     TI      BIT     098H.1
  00B3                27     INT1    BIT     0B0H.3
  00CB                28     RCAP2H  DATA    0CBH
  00BC                29     PS      BIT     0B8H.4
  0081                30     SP      DATA    081H
  0091                31     T2EX    BIT     090H.1
  00D2                32     OV      BIT     0D0H.2
  00CA                33     RCAP2L  DATA    0CAH
  00C9                34     C_T2    BIT     0C8H.1
  00B6                35     WR      BIT     0B0H.6
  00CD                36     RCLK    BIT     0C8H.5
  00CC                37     TCLK    BIT     0C8H.4
  0099                38     SBUF    DATA    099H
  0087                39     PCON    DATA    087H
  0098                40     SCON    DATA    098H
  0089                41     TMOD    DATA    089H
  0088                42     TCON    DATA    088H
  0089                43     IE0     BIT     088H.1
  008B                44     IE1     BIT     088H.3
  00F0                45     B       DATA    0F0H
  00C8                46     CP_RL2  BIT     0C8H.0
  00E0                47     ACC     DATA    0E0H
  00A9                48     ET0     BIT     0A8H.1
  00AB                49     ET1     BIT     0A8H.3
  008D                50     TF0     BIT     088H.5
  00AD                51     ET2     BIT     0A8H.5
  008F                52     TF1     BIT     088H.7
  00CF                53     TF2     BIT     0C8H.7
  009A                54     RB8     BIT     098H.2
  008C                55     TH0     DATA    08CH
  00A8                56     EX0     BIT     0A8H.0
  0088                57     IT0     BIT     088H.0
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     2

  008D                58     TH1     DATA    08DH
  009B                59     TB8     BIT     098H.3
  00AA                60     EX1     BIT     0A8H.2
  008A                61     IT1     BIT     088H.2
  00CD                62     TH2     DATA    0CDH
  00D0                63     P       BIT     0D0H.0
  009F                64     SM0     BIT     098H.7
  008A                65     TL0     DATA    08AH
  009E                66     SM1     BIT     098H.6
  008B                67     TL1     DATA    08BH
  009D                68     SM2     BIT     098H.5
  00CC                69     TL2     DATA    0CCH
  00B9                70     PT0     BIT     0B8H.1
  00BB                71     PT1     BIT     0B8H.3
  00D3                72     RS0     BIT     0D0H.3
  00BD                73     PT2     BIT     0B8H.5
  008C                74     TR0     BIT     088H.4
  00D4                75     RS1     BIT     0D0H.4
  008E                76     TR1     BIT     088H.6
  00CA                77     TR2     BIT     0C8H.2
  00B8                78     PX0     BIT     0B8H.0
  00BA                79     PX1     BIT     0B8H.2
  0083                80     DPH     DATA    083H
  0082                81     DPL     DATA    082H
  00CB                82     EXEN2   BIT     0C8H.3
  009C                83     REN     BIT     098H.4
  00C8                84     T2CON   DATA    0C8H
  00B0                85     RXD     BIT     0B0H.0
  00B1                86     TXD     BIT     0B0H.1
  00D5                87     F0      BIT     0D0H.5
  00D0                88     PSW     DATA    0D0H
                      89     ?PR?main?MAIN        SEGMENT CODE 
                      90     ?PR?SystemOn?MAIN    SEGMENT CODE 
                      91     ?PR?Task0?MAIN       SEGMENT CODE 
                      92     ?PR?Task1?MAIN       SEGMENT CODE 
                      93     ?PR?Task2?MAIN       SEGMENT CODE 
                      94     ?PR?Task3?MAIN       SEGMENT CODE 
                      95     ?PR?Task4?MAIN       SEGMENT CODE 
                      96             EXTRN   CODE (SysTimerOn)
                      97             EXTRN   CODE (InitSystem)
                      98             EXTRN   IDATA (gTCBs)
                      99             EXTRN   DATA (gSCB)
                     100             EXTRN   CODE (GetReadyTsk)
                     101             EXTRN   CODE (GetReadyPriorTsk)
                     102             EXTRN   CODE (?C_STARTUP)
                     103             PUBLIC  Task4
                     104             PUBLIC  Task3
                     105             PUBLIC  Task2
                     106             PUBLIC  Task1
                     107             PUBLIC  Task0
                     108             PUBLIC  SystemOn
                     109             PUBLIC  main
                     110     ; 
                     111     ; #include <reg52.h>
                     112     ; #include "../include/init.h"
                     113     ; #include "../include/system.h"
                     114     ; #include "../include/schedule.h"
                     115     ; #include "../include/macro.h"
                     116     ; 
                     117     ; void SystemOn();
                     118     ; 
                     119     ; void main()
                     120     
----                 121             RSEG  ?PR?main?MAIN
0000                 122     main:
                     123             USING   0
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     3

                     124                             ; SOURCE LINE # 10
                     125     ; {
                     126                             ; SOURCE LINE # 11
                     127     ;       InitSystem();
                     128                             ; SOURCE LINE # 12
0000 120000   F      129             LCALL   InitSystem
                     130     ; 
                     131     ;       SystemOn();     
                     132                             ; SOURCE LINE # 14
0003 020000   F      133             LJMP    SystemOn
                     134     ; END OF main
                     135     
                     136     ; }
                     137     ; 
                     138     ; /***********************/
                     139     ; 
                     140     ; void SystemOn()
                     141     
----                 142             RSEG  ?PR?SystemOn?MAIN
0000                 143     SystemOn:
                     144             USING   0
                     145                             ; SOURCE LINE # 19
                     146     ; {
                     147                             ; SOURCE LINE # 20
                     148     ;       gSCB.sysRunningFlag = SYS_ON;
                     149                             ; SOURCE LINE # 21
0000 7500FF   F      150             MOV     gSCB+07H,#0FFH
                     151     ;       gSCB.sysMode = SYS_RUNNING;
                     152                             ; SOURCE LINE # 22
0003 750001   F      153             MOV     gSCB+06H,#01H
                     154     ;       
                     155     ;       SysTimerOn();
                     156                             ; SOURCE LINE # 24
0006 120000   F      157             LCALL   SysTimerOn
                     158     ;       
                     159     ;       EA = INT_OFF;
                     160                             ; SOURCE LINE # 26
0009 C2AF            161             CLR     EA
                     162     ; 
                     163     ;       if (0 == gSCB.nextTskNum)
                     164                             ; SOURCE LINE # 28
000B E500     F      165             MOV     A,gSCB+01H
000D 7011            166             JNZ     ?C0002
                     167     ;       {
                     168                             ; SOURCE LINE # 29
                     169     ;               if (PRIORITY_ON == gSCB.priorityFlag)
                     170                             ; SOURCE LINE # 30
000F E500     F      171             MOV     A,gSCB+05H
0011 B4FF07          172             CJNE    A,#0FFH,?C0003
                     173     ;               {
                     174                             ; SOURCE LINE # 31
                     175     ;                       gSCB.nextTskNum = GetReadyPriorTsk();
                     176                             ; SOURCE LINE # 32
0014 120000   F      177             LCALL   GetReadyPriorTsk
0017 8F00     F      178             MOV     gSCB+01H,R7
                     179     ;               }
                     180                             ; SOURCE LINE # 33
0019 8005            181             SJMP    ?C0002
001B                 182     ?C0003:
                     183     ;               else
                     184     ;               {
                     185                             ; SOURCE LINE # 35
                     186     ;                       gSCB.nextTskNum = GetReadyTsk();
                     187                             ; SOURCE LINE # 36
001B 120000   F      188             LCALL   GetReadyTsk
001E 8F00     F      189             MOV     gSCB+01H,R7
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     4

                     190     ;               }
                     191                             ; SOURCE LINE # 37
                     192     ;       }
                     193                             ; SOURCE LINE # 38
0020                 194     ?C0002:
                     195     ; 
                     196     ;       gSCB.timeSlice = SYS_TIMESLICE;
                     197                             ; SOURCE LINE # 40
0020 750005   F      198             MOV     gSCB+02H,#05H
                     199     ;       gSCB.curTskNum = gSCB.nextTskNum;
                     200                             ; SOURCE LINE # 41
0023 850000   F      201             MOV     gSCB,gSCB+01H
                     202     ;       gSCB.nextTskNum = 0;
                     203                             ; SOURCE LINE # 42
0026 E4              204             CLR     A
0027 F500     F      205             MOV     gSCB+01H,A
                     206     ;       SP = gTCBs[gSCB.curTskNum].taskSP;
                     207                             ; SOURCE LINE # 43
0029 E500     F      208             MOV     A,gSCB
002B 75F005          209             MOV     B,#05H
002E A4              210             MUL     AB
002F 2400     F      211             ADD     A,#LOW (gTCBs+02H)
0031 F8              212             MOV     R0,A
0032 E6              213             MOV     A,@R0
0033 F581            214             MOV     SP,A
                     215     ; 
                     216     ;       /*pop task stack data*/
                     217     ;       __asm POP AR7
0035 D007            218              POP AR7
                     219     ;       __asm POP AR6
0037 D006            220              POP AR6
                     221     ;       __asm POP AR5
0039 D005            222              POP AR5
                     223     ;       __asm POP AR4
003B D004            224              POP AR4
                     225     ;       //__asm POP AR3
                     226     ;       //__asm POP AR2
                     227     ;       __asm POP AR1
003D D001            228              POP AR1
                     229     ;       __asm POP AR0
003F D000            230              POP AR0
                     231     ;       __asm POP PSW
0041 D0D0            232              POP PSW
                     233     ;       __asm POP B
0043 D0F0            234              POP B
                     235     ;       __asm POP ACC
0045 D0E0            236              POP ACC
                     237     ;       
                     238     ;       EA = INT_ON;
                     239                             ; SOURCE LINE # 58
0047 D2AF            240             SETB    EA
                     241     ;       
                     242     ; }
                     243                             ; SOURCE LINE # 60
0049 22              244             RET     
                     245     ; END OF SystemOn
                     246     
                     247     ; 
                     248     ; /***********************/
                     249     ; 
                     250     ; void Task0()
                     251     
----                 252             RSEG  ?PR?Task0?MAIN
0000                 253     Task0:
                     254                             ; SOURCE LINE # 64
                     255     ; {
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     5

                     256                             ; SOURCE LINE # 65
0000                 257     ?C0006:
                     258     ;       while (1)
                     259                             ; SOURCE LINE # 66
                     260     ;       {
                     261                             ; SOURCE LINE # 67
                     262     ;               //TODO
                     263     ;       }
                     264                             ; SOURCE LINE # 69
0000 80FE            265             SJMP    ?C0006
                     266     ; END OF Task0
                     267     
                     268     ; }
                     269     ; 
                     270     ; void Task1()
                     271     
----                 272             RSEG  ?PR?Task1?MAIN
0000                 273     Task1:
                     274                             ; SOURCE LINE # 72
                     275     ; {
                     276                             ; SOURCE LINE # 73
0000                 277     ?C0009:
                     278     ;       while (1)
                     279                             ; SOURCE LINE # 74
                     280     ;       {
                     281                             ; SOURCE LINE # 75
                     282     ;               //TODO
                     283     ;       }
                     284                             ; SOURCE LINE # 77
0000 80FE            285             SJMP    ?C0009
                     286     ; END OF Task1
                     287     
                     288     ; }
                     289     ; 
                     290     ; void Task2()
                     291     
----                 292             RSEG  ?PR?Task2?MAIN
0000                 293     Task2:
                     294                             ; SOURCE LINE # 80
                     295     ; {
                     296                             ; SOURCE LINE # 81
0000                 297     ?C0012:
                     298     ;       while (1)
                     299                             ; SOURCE LINE # 82
                     300     ;       {
                     301                             ; SOURCE LINE # 83
                     302     ;               //TODO
                     303     ;       }
                     304                             ; SOURCE LINE # 85
0000 80FE            305             SJMP    ?C0012
                     306     ; END OF Task2
                     307     
                     308     ; }
                     309     ; 
                     310     ; void Task3()
                     311     
----                 312             RSEG  ?PR?Task3?MAIN
0000                 313     Task3:
                     314                             ; SOURCE LINE # 88
                     315     ; {
                     316                             ; SOURCE LINE # 89
0000                 317     ?C0015:
                     318     ;       while (1)
                     319                             ; SOURCE LINE # 90
                     320     ;       {
                     321                             ; SOURCE LINE # 91
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     6

                     322     ;               //TODO
                     323     ;       }
                     324                             ; SOURCE LINE # 93
0000 80FE            325             SJMP    ?C0015
                     326     ; END OF Task3
                     327     
                     328     ; }
                     329     ; 
                     330     ; void Task4()
                     331     
----                 332             RSEG  ?PR?Task4?MAIN
0000                 333     Task4:
                     334                             ; SOURCE LINE # 96
                     335     ; {
                     336                             ; SOURCE LINE # 97
0000                 337     ?C0018:
                     338     ;       while (1)
                     339                             ; SOURCE LINE # 98
                     340     ;       {
                     341                             ; SOURCE LINE # 99
                     342     ;               //TODO
                     343     ;       }
                     344                             ; SOURCE LINE # 101
0000 80FE            345             SJMP    ?C0018
                     346     ; END OF Task4
                     347     
                     348             END
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     7

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C0002 . . . . . .  C ADDR   0020H   R   SEG=?PR?SYSTEMON?MAIN
?C0003 . . . . . .  C ADDR   001BH   R   SEG=?PR?SYSTEMON?MAIN
?C0006 . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK0?MAIN
?C0009 . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK1?MAIN
?C0012 . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK2?MAIN
?C0015 . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK3?MAIN
?C0018 . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK4?MAIN
?C_STARTUP . . . .  C ADDR   -----       EXT
?PR?MAIN?MAIN. . .  C SEG    0006H       REL=UNIT
?PR?SYSTEMON?MAIN.  C SEG    004AH       REL=UNIT
?PR?TASK0?MAIN . .  C SEG    0002H       REL=UNIT
?PR?TASK1?MAIN . .  C SEG    0002H       REL=UNIT
?PR?TASK2?MAIN . .  C SEG    0002H       REL=UNIT
?PR?TASK3?MAIN . .  C SEG    0002H       REL=UNIT
?PR?TASK4?MAIN . .  C SEG    0002H       REL=UNIT
AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
AR0. . . . . . . .  D ADDR   0000H   A   
AR1. . . . . . . .  D ADDR   0001H   A   
AR4. . . . . . . .  D ADDR   0004H   A   
AR5. . . . . . . .  D ADDR   0005H   A   
AR6. . . . . . . .  D ADDR   0006H   A   
AR7. . . . . . . .  D ADDR   0007H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
GETREADYPRIORTSK .  C ADDR   -----       EXT
GETREADYTSK. . . .  C ADDR   -----       EXT
GSCB . . . . . . .  D ADDR   -----       EXT
GTCBS. . . . . . .  I ADDR   -----       EXT
IE . . . . . . . .  D ADDR   00A8H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
INITSYSTEM . . . .  C ADDR   -----       EXT
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IP . . . . . . . .  D ADDR   00B8H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MAIN . . . . . . .  C ADDR   0000H   R   SEG=?PR?MAIN?MAIN
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
A51 MACRO ASSEMBLER  MAIN                                                                 09/15/2014 23:51:52 PAGE     8

PS . . . . . . . .  B ADDR   00B8H.4 A   
PSW. . . . . . . .  D ADDR   00D0H   A   
PT0. . . . . . . .  B ADDR   00B8H.1 A   
PT1. . . . . . . .  B ADDR   00B8H.3 A   
PT2. . . . . . . .  B ADDR   00B8H.5 A   
PX0. . . . . . . .  B ADDR   00B8H.0 A   
PX1. . . . . . . .  B ADDR   00B8H.2 A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
SYSTEMON . . . . .  C ADDR   0000H   R   SEG=?PR?SYSTEMON?MAIN
SYSTIMERON . . . .  C ADDR   -----       EXT
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2 . . . . . . . .  B ADDR   0090H.0 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2EX . . . . . . .  B ADDR   0090H.1 A   
TASK0. . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK0?MAIN
TASK1. . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK1?MAIN
TASK2. . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK2?MAIN
TASK3. . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK3?MAIN
TASK4. . . . . . .  C ADDR   0000H   R   SEG=?PR?TASK4?MAIN
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
