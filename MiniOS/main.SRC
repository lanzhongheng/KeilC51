; .\main.SRC generated from: src\main.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.EXE src\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) SRC(.\main.SRC)

$NOMOD51

NAME	MAIN

P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
T1	BIT	0B0H.5
T2	BIT	090H.0
EA	BIT	0A8H.7
IE	DATA	0A8H
EXF2	BIT	0C8H.6
RD	BIT	0B0H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
RI	BIT	098H.0
INT0	BIT	0B0H.2
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
T2EX	BIT	090H.1
OV	BIT	0D0H.2
RCAP2L	DATA	0CAH
C_T2	BIT	0C8H.1
WR	BIT	0B0H.6
RCLK	BIT	0C8H.5
TCLK	BIT	0C8H.4
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
CP_RL2	BIT	0C8H.0
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
TF1	BIT	088H.7
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
TB8	BIT	098H.3
EX1	BIT	0A8H.2
IT1	BIT	088H.2
TH2	DATA	0CDH
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
TL2	DATA	0CCH
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
PT2	BIT	0B8H.5
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
REN	BIT	098H.4
T2CON	DATA	0C8H
RXD	BIT	0B0H.0
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
PSW	DATA	0D0H
?PR?main?MAIN        SEGMENT CODE 
?PR?SystemOn?MAIN    SEGMENT CODE 
?PR?Task0?MAIN       SEGMENT CODE 
?PR?Task1?MAIN       SEGMENT CODE 
?PR?Task2?MAIN       SEGMENT CODE 
?PR?Task3?MAIN       SEGMENT CODE 
?PR?Task4?MAIN       SEGMENT CODE 
	EXTRN	CODE (SysTimerOn)
	EXTRN	CODE (InitSystem)
	EXTRN	IDATA (gTCBs)
	EXTRN	DATA (gSCB)
	EXTRN	CODE (GetReadyTsk)
	EXTRN	CODE (GetReadyPriorTsk)
	EXTRN	CODE (?C_STARTUP)
	PUBLIC	Task4
	PUBLIC	Task3
	PUBLIC	Task2
	PUBLIC	Task1
	PUBLIC	Task0
	PUBLIC	SystemOn
	PUBLIC	main
; 
; #include <reg52.h>
; #include "../include/init.h"
; #include "../include/system.h"
; #include "../include/schedule.h"
; #include "../include/macro.h"
; 
; void SystemOn();
; 
; void main()

	RSEG  ?PR?main?MAIN
main:
	USING	0
			; SOURCE LINE # 10
; {
			; SOURCE LINE # 11
; 	InitSystem();
			; SOURCE LINE # 12
	LCALL	InitSystem
; 
; 	SystemOn();	
			; SOURCE LINE # 14
	LJMP 	SystemOn
; END OF main

; }
; 
; /***********************/
; 
; void SystemOn()

	RSEG  ?PR?SystemOn?MAIN
SystemOn:
	USING	0
			; SOURCE LINE # 19
; {
			; SOURCE LINE # 20
; 	gSCB.sysRunningFlag = SYS_ON;
			; SOURCE LINE # 21
	MOV  	gSCB+07H,#0FFH
; 	gSCB.sysMode = SYS_RUNNING;
			; SOURCE LINE # 22
	MOV  	gSCB+06H,#01H
; 	
; 	SysTimerOn();
			; SOURCE LINE # 24
	LCALL	SysTimerOn
; 	
; 	EA = INT_OFF;
			; SOURCE LINE # 26
	CLR  	EA
; 
; 	if (0 == gSCB.nextTskNum)
			; SOURCE LINE # 28
	MOV  	A,gSCB+01H
	JNZ  	?C0002
; 	{
			; SOURCE LINE # 29
; 		if (PRIORITY_ON == gSCB.priorityFlag)
			; SOURCE LINE # 30
	MOV  	A,gSCB+05H
	CJNE 	A,#0FFH,?C0003
; 		{
			; SOURCE LINE # 31
; 			gSCB.nextTskNum = GetReadyPriorTsk();
			; SOURCE LINE # 32
	LCALL	GetReadyPriorTsk
	MOV  	gSCB+01H,R7
; 		}
			; SOURCE LINE # 33
	SJMP 	?C0002
?C0003:
; 		else
; 		{
			; SOURCE LINE # 35
; 			gSCB.nextTskNum = GetReadyTsk();
			; SOURCE LINE # 36
	LCALL	GetReadyTsk
	MOV  	gSCB+01H,R7
; 		}
			; SOURCE LINE # 37
; 	}
			; SOURCE LINE # 38
?C0002:
; 
; 	gSCB.timeSlice = SYS_TIMESLICE;
			; SOURCE LINE # 40
	MOV  	gSCB+02H,#05H
; 	gSCB.curTskNum = gSCB.nextTskNum;
			; SOURCE LINE # 41
	MOV  	gSCB,gSCB+01H
; 	gSCB.nextTskNum = 0;
			; SOURCE LINE # 42
	CLR  	A
	MOV  	gSCB+01H,A
; 	SP = gTCBs[gSCB.curTskNum].taskSP;
			; SOURCE LINE # 43
	MOV  	A,gSCB
	MOV  	B,#05H
	MUL  	AB
	ADD  	A,#LOW (gTCBs+02H)
	MOV  	R0,A
	MOV  	A,@R0
	MOV  	SP,A
; 
; 	/*pop task stack data*/
; 	__asm POP AR7
	 POP AR7
; 	__asm POP AR6
	 POP AR6
; 	__asm POP AR5
	 POP AR5
; 	__asm POP AR4
	 POP AR4
; 	//__asm POP AR3
; 	//__asm POP AR2
; 	__asm POP AR1
	 POP AR1
; 	__asm POP AR0
	 POP AR0
; 	__asm POP PSW
	 POP PSW
; 	__asm POP B
	 POP B
; 	__asm POP ACC
	 POP ACC
; 	
; 	EA = INT_ON;
			; SOURCE LINE # 58
	SETB 	EA
; 	
; }
			; SOURCE LINE # 60
	RET  	
; END OF SystemOn

; 
; /***********************/
; 
; void Task0()

	RSEG  ?PR?Task0?MAIN
Task0:
			; SOURCE LINE # 64
; {
			; SOURCE LINE # 65
?C0006:
; 	while (1)
			; SOURCE LINE # 66
; 	{
			; SOURCE LINE # 67
; 		//TODO
; 	}
			; SOURCE LINE # 69
	SJMP 	?C0006
; END OF Task0

; }
; 
; void Task1()

	RSEG  ?PR?Task1?MAIN
Task1:
			; SOURCE LINE # 72
; {
			; SOURCE LINE # 73
?C0009:
; 	while (1)
			; SOURCE LINE # 74
; 	{
			; SOURCE LINE # 75
; 		//TODO
; 	}
			; SOURCE LINE # 77
	SJMP 	?C0009
; END OF Task1

; }
; 
; void Task2()

	RSEG  ?PR?Task2?MAIN
Task2:
			; SOURCE LINE # 80
; {
			; SOURCE LINE # 81
?C0012:
; 	while (1)
			; SOURCE LINE # 82
; 	{
			; SOURCE LINE # 83
; 		//TODO
; 	}
			; SOURCE LINE # 85
	SJMP 	?C0012
; END OF Task2

; }
; 
; void Task3()

	RSEG  ?PR?Task3?MAIN
Task3:
			; SOURCE LINE # 88
; {
			; SOURCE LINE # 89
?C0015:
; 	while (1)
			; SOURCE LINE # 90
; 	{
			; SOURCE LINE # 91
; 		//TODO
; 	}
			; SOURCE LINE # 93
	SJMP 	?C0015
; END OF Task3

; }
; 
; void Task4()

	RSEG  ?PR?Task4?MAIN
Task4:
			; SOURCE LINE # 96
; {
			; SOURCE LINE # 97
?C0018:
; 	while (1)
			; SOURCE LINE # 98
; 	{
			; SOURCE LINE # 99
; 		//TODO
; 	}
			; SOURCE LINE # 101
	SJMP 	?C0018
; END OF Task4

	END
